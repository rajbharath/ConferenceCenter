Problem Statement:
	Conference Organizer wants to arrange a conference. He approaches a Conference Center Owner for the Plan for that conference.
Conference Center Owner needs to return the Plan for the conference.

Usecase:
 
1. Conference Center Owner gets the input as Conference and returns the plan

2. A Conference Center Owner contains the following
	- List of ConferenceRoom
	- List of Non-Operational Date

3. A ConferenceRoom contains the following
	- Room Name
	- BookingHistory
	- List of Maintenance Date
	- Capacity
	
4. A Conference contains the following
	- Conference Name
	- start Date
	- end Date
	- List of Event
5. An Event contains the following
	- eventName
	- eventDate
	- startTime
	- endTime
	- no of attendees
6. Conference Center owner checks the conference dates whether it is operational on those dates or not  
7. If it is operation on those dates, then conference center owner, gathers the list of available Conference Rooms for the event
8. Availability of ConferenceRoom is determined by
                i) no of attendees of that event is <= the conference room capacity
                ii) Date of event should not fall in time of room maintenance date 
                iii) Conference Room should not have a booking on that event date and time. Conference Room checks with its Booking History for this condition.
9. Booking History Contains the following
	- List of booked events
	
10. Repeat step 7 to 9 till for all the events in the Conference
11. Return the Plan
12. Plan contains the following
				- Conference Name
                - Map of events, list of available room
 
 
Classes:
 
ConferenceCenterOwner
----------------------
i) list of conference room : List<ConferenceRoom>
ii) non operation dates : List<Date>
 
-getPlan(Conference) : Plan

ConferenceRoom
---------------
i) roomName : String
ii) bookingHistory : BookingHistory
iii) Capacity : Integer
iv) maintenanceDates : List<Date> 
 
- isAvailableFor(Event) : Boolean
 
Conference
------------
i) name : String
ii) startDate : Date
iii) endDate : Date
iv) List of event : List<Event>
 
- getEvents()
- getStartDate()
- getEndDate()


Event
------
i) eventName : String
ii) date : Date
iii) start time : String //24 format 23.21 
iv) end time : String  //24 format 23.21
v) no of attendees : Integer
 
- getDate() : Date
- getStartTime() : String
- getEndTime() : String
- getNoOfAttendees() : int
- getName() : String
 
BookingHistory
--------------
i) eventsBooked : List<Event>
 
- isAnyOverLappingEventFor(inputEvent)

Plan:
------
i) conferenceName : String
ii) eventsWithAvailableRooms : Map<Event,List<ConferenceRoom>>

- getAvailableRoomsForAllEvents()