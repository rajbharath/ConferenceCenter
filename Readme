Problem Statement:
	Conference Organizer wants to arrange a conference. He approaches a Conference Center Owner for a Plan of the conference.
Conference Center Owner gives a Plan for the conference.


Note:

1. A Conference Center Owner contains the following
	- List of ConferenceRoom
	- List of Non-Operational Date

2. A ConferenceRoom contains the following
	- Room Name
	- BookingHistory
	- List of Maintenance Date
	- Capacity
	
3. A Conference contains the following
	- Conference Name
	- start
	- end
	- List of Event
4. An Event contains the following
	- eventName
	- start
	- end
	- no of attendees
5. Booking History Contains the following
	- List of booked events

Usecase:
 
1. Conference Center Owner gets the input as Conference and returns the plan
2. Conference Center owner checks the conference dates whether Conference Center is operational on those dates or not  
3. If it is operational on those dates then the conference center owner finds the list of available Conference Rooms for an event
4. Availability of ConferenceRoom is determined by
                  i) no of attendees of that event <= the conference room capacity
                 ii) Date of event should not fall in time of room maintenance date 
                iii) Conference Room should not have a booking on that event date and time using its Booking History.
5. Repeat step 3 and 4 for all the events in the Conference
6. Return the Plan
7. Plan contains the following
		- Conference Name
                - Map of events, list of available room

Classes:
 
ConferenceCenterOwner
----------------------
i) list of conference room : List<ConferenceRoom>
ii) non operational dates : List<Date>
 
-getPlan(Conference) : Plan

ConferenceRoom
---------------
i) roomName : String
ii) bookingHistory : BookingHistory
iii) Capacity : Integer
iv) maintenanceDates : List<Date> 
 
- isAvailableFor(Event) : Boolean
 
Conference
------------
i) name : String
ii) start: String // DD-MM-YYYY-HH-MM format
iii) end : String  // DD-MM-YYYY-HH-MM format
iv) List of event : List<Event>
 
- getEvents()
- getStart()
- getEnd()


Event
------
i) eventName : String
ii) start: String // DD-MM-YYYY-HH-MM format
iii) end : String  // DD-MM-YYYY-HH-MM format
iv) no of attendees : Integer
 
- getStart() : String
- getEnd() : String
- getNoOfAttendees() : Integer
- getName() : String
 
BookingHistory
--------------
i) eventsBooked : List<Event>
 
- isAnyOverLappingEventFor(inputEvent)

Plan:
------
i) conferenceName : String
ii) eventsWithAvailableRooms : Map<Event,List<ConferenceRoom>>

- getAvailableRoomsForAllEvents()
